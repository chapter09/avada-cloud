# vim:ft=ansible:
---
# This Playbook update the Spark, Hive and HDFS configuration files
# and launch the cluster

- hosts: master
  remote_user: ubuntu
  tasks:
    - name: Update configuration file
      include: "{{ inventory_dir }}/roles/master/tasks/config.yml"

- hosts: worker
  remote_user: ubuntu
  gather_facts: no 
  tasks:
    - name: Sync and render configuration file
      include: "{{ inventory_dir }}/roles/worker/tasks/sync.yml"

- hosts: all
  remote_user: ubuntu
  tasks:
    #- name: Mount /dev/xvdf /mnt
    #  mount: name=/mnt/ src=/dev/xvdf fstype=ext4 state=mounted
    #  become: yes
    #  when: init is undefined

    - name: Enforce HDFS hostname for each node
      lineinfile: dest=/home/ubuntu/hadoop-2.6.4/etc/hadoop/hdfs-site.xml 
                  insertafter='dfs.datanode.hostname'
                  line='    <value>{{ inventory_hostname }}</value>' 
                  state=present

    - name: Enforce YARN nodemanger hostname for each node 
      lineinfile: dest=/home/ubuntu/hadoop-2.6.4/etc/hadoop/yarn-site.xml 
                  insertafter='yarn.nodemanager.hostname'
                  line='    <value>{{ inventory_hostname }}</value>' 
                  state=present

    - name: Enforce YARN timeline-service hostname for each node
      lineinfile: dest=/home/ubuntu/hadoop-2.6.4/etc/hadoop/yarn-site.xml 
                  insertafter='yarn.timeline-service.hostname'
                  line='    <value>{{ inventory_hostname }}</value>' 
                  state=present

- hosts: master
  remote_user: ubuntu
  tasks:
    - name: Format HDFS namenode
      include: hdfs_init.yml 
      when: init is defined

    - name: Start HDFS cluster
      command: sbin/start-dfs.sh chdir=/home/ubuntu/hadoop-2.6.4/

    - name: Start Spark cluster
      command: sbin/start-all.sh chdir=/home/ubuntu/spark-1.6.1/
